using System.Diagnostics;

namespace Quarer;

internal static class AlphanumericEncoder
{
    public const string Characters = "0123456789AABCDEFGHIJKLMNOPQRSTUVWXYZ $%*+-./:";

    public static ReadOnlySpan<short> Character2Map =>
    [
        //TODO: Check if this elides bounds checks (as Length == byte.MaxValue)
        //If it does not, then we can use a much smaller mapping array
        -1 ,	// 0
        -1 ,	// 1
        -1 ,	// 2
        -1 ,	// 3
        -1 ,	// 4
        -1 ,	// 5
        -1 ,	// 6
        -1 ,	// 7
        -1 ,	// 8
        -1 ,	// 9
        -1 ,	// 10
        -1 ,	// 11
        -1 ,	// 12
        -1 ,	// 13
        -1 ,	// 14
        -1 ,	// 15
        -1 ,	// 16
        -1 ,	// 17
        -1 ,	// 18
        -1 ,	// 19
        -1 ,	// 20
        -1 ,	// 21
        -1 ,	// 22
        -1 ,	// 23
        -1 ,	// 24
        -1 ,	// 25
        -1 ,	// 26
        -1 ,	// 27
        -1 ,	// 28
        -1 ,	// 29
        -1 ,	// 30
        -1 ,	// 31
        36 ,	// Space - 32
        -1 ,	// 33
        -1 ,	// 34
        -1 ,	// 35
        37 ,	// $ - 36
        38 ,	// % - 37
        -1 ,	// 38
        -1 ,	// 39
        -1 ,	// 40
        -1 ,	// 41
        39 ,	// * - 42
        40 ,	// + - 43
        -1 ,    // 44
        41 ,	// - - 45
        42 ,	// . - 46
        43 ,	// / - 47
        0  ,	// 0 - 48
        1  ,	// 1 - 49
        2  ,	// 2 - 50
        3  ,	// 3 - 51
        4  ,	// 4 - 52
        5  ,	// 5 - 53
        6  ,	// 6 - 54
        7  ,	// 7 - 55
        8  ,	// 8 - 56
        9  ,	// 9 - 57
        44 ,	// : - 58
        -1 ,	// 59
        -1 ,	// 60
        -1 ,	// 61
        -1 ,	// 62
        -1 ,	// 63
        -1 ,	// 64
        10 ,	// A - 65
        11 ,	// B
        12 ,	// C
        13 ,	// D
        14 ,	// E
        15 ,	// F
        16 ,	// G
        17 ,	// H
        18 ,	// I
        19 ,	// J
        20 ,	// K
        21 ,	// L
        22 ,	// M
        23 ,	// N
        24 ,	// O
        25 ,	// P
        26 ,	// Q
        27 ,	// R
        28 ,	// S
        29 ,	// T
        30 ,	// U
        31 ,	// V
        32 ,	// W
        33 ,	// X
        34 ,	// Y
        35 ,	// Z - 90
        -1 ,	// 91
        -1 ,	// 92
        -1 ,	// 93
        -1 ,	// 94
        -1 ,	// 95
        -1 ,	// 96
        -1 ,	// 97
        -1 ,	// 98
        -1 ,	// 99
        -1 ,	// 100
        -1 ,	// 101
        -1 ,	// 102
        -1 ,	// 103
        -1 ,	// 104
        -1 ,	// 105
        -1 ,	// 106
        -1 ,	// 107
        -1 ,	// 108
        -1 ,	// 109
        -1 ,	// 110
        -1 ,	// 111
        -1 ,	// 112
        -1 ,	// 113
        -1 ,	// 114
        -1 ,	// 115
        -1 ,	// 116
        -1 ,	// 117
        -1 ,	// 118
        -1 ,	// 119
        -1 ,	// 120
        -1 ,	// 121
        -1 ,	// 122
        -1 ,	// 123
        -1 ,	// 124
        -1 ,	// 125
        -1 ,	// 126
        -1 ,	// 127
        -1 ,	// 128
        -1 ,	// 129
        -1 ,	// 130
        -1 ,	// 131
        -1 ,	// 132
        -1 ,	// 133
        -1 ,	// 134
        -1 ,	// 135
        -1 ,	// 136
        -1 ,	// 137
        -1 ,	// 138
        -1 ,	// 139
        -1 ,	// 140
        -1 ,	// 141
        -1 ,	// 142
        -1 ,	// 143
        -1 ,	// 144
        -1 ,	// 145
        -1 ,	// 146
        -1 ,	// 147
        -1 ,	// 148
        -1 ,	// 149
        -1 ,	// 150
        -1 ,	// 151
        -1 ,	// 152
        -1 ,	// 153
        -1 ,	// 154
        -1 ,	// 155
        -1 ,	// 156
        -1 ,	// 157
        -1 ,	// 158
        -1 ,	// 159
        -1 ,	// 160
        -1 ,	// 161
        -1 ,	// 162
        -1 ,	// 163
        -1 ,	// 164
        -1 ,	// 165
        -1 ,	// 166
        -1 ,	// 167
        -1 ,	// 168
        -1 ,	// 169
        -1 ,	// 170
        -1 ,	// 171
        -1 ,	// 172
        -1 ,	// 173
        -1 ,	// 174
        -1 ,	// 175
        -1 ,	// 176
        -1 ,	// 177
        -1 ,	// 178
        -1 ,	// 179
        -1 ,	// 180
        -1 ,	// 181
        -1 ,	// 182
        -1 ,	// 183
        -1 ,	// 184
        -1 ,	// 185
        -1 ,	// 186
        -1 ,	// 187
        -1 ,	// 188
        -1 ,	// 189
        -1 ,	// 190
        -1 ,	// 191
        -1 ,	// 192
        -1 ,	// 193
        -1 ,	// 194
        -1 ,	// 195
        -1 ,	// 196
        -1 ,	// 197
        -1 ,	// 198
        -1 ,	// 199
        -1 ,	// 200
        -1 ,	// 201
        -1 ,	// 202
        -1 ,	// 203
        -1 ,	// 204
        -1 ,	// 205
        -1 ,	// 206
        -1 ,	// 207
        -1 ,	// 208
        -1 ,	// 209
        -1 ,	// 210
        -1 ,	// 211
        -1 ,	// 212
        -1 ,	// 213
        -1 ,	// 214
        -1 ,	// 215
        -1 ,	// 216
        -1 ,	// 217
        -1 ,	// 218
        -1 ,	// 219
        -1 ,	// 220
        -1 ,	// 221
        -1 ,	// 222
        -1 ,	// 223
        -1 ,	// 224
        -1 ,	// 225
        -1 ,	// 226
        -1 ,	// 227
        -1 ,	// 228
        -1 ,	// 229
        -1 ,	// 230
        -1 ,	// 231
        -1 ,	// 232
        -1 ,	// 233
        -1 ,	// 234
        -1 ,	// 235
        -1 ,	// 236
        -1 ,	// 237
        -1 ,	// 238
        -1 ,	// 239
        -1 ,	// 240
        -1 ,	// 241
        -1 ,	// 242
        -1 ,	// 243
        -1 ,	// 244
        -1 ,	// 245
        -1 ,	// 246
        -1 ,	// 247
        -1 ,	// 248
        -1 ,	// 249
        -1 ,	// 250
        -1 ,	// 251
        -1 ,	// 252
        -1 ,	// 253
        -1 ,	// 254
        -1 ,	// 255
    ];

    public static ReadOnlySpan<short> Character1Map =>
    [
        -1  ,   // 0
        -1  ,   // 1
        -1  ,   // 2
        -1  ,   // 3
        -1  ,   // 4
        -1  ,   // 5
        -1  ,   // 6
        -1  ,   // 7
        -1  ,   // 8
        -1  ,   // 9
        -1  ,   // 10
        -1  ,   // 11
        -1  ,   // 12
        -1  ,   // 13
        -1  ,   // 14
        -1  ,   // 15
        -1  ,   // 16
        -1  ,   // 17
        -1  ,   // 18
        -1  ,   // 19
        -1  ,   // 20
        -1  ,   // 21
        -1  ,   // 22
        -1  ,   // 23
        -1  ,   // 24
        -1  ,   // 25
        -1  ,   // 26
        -1  ,   // 27
        -1  ,   // 28
        -1  ,   // 29
        -1  ,   // 30
        -1  ,   // 31
        1620,   // Space - 32
        -1  ,   // 33
        -1  ,   // 34
        -1  ,   // 35
        1665,   // $ - 36
        1710,   // % - 37
        -1  ,   // 38
        -1  ,   // 39
        -1  ,   // 40
        -1  ,   // 41
        1755,   // * - 42
        1800,   // + - 43
        -1  ,   // 44
        1845,   // - - 45
        1890,   // . - 46
        1935,   // / - 47
        0   ,   // 0 - 48
        45  ,   // 1 - 49
        90  ,   // 2 - 50
        135 ,   // 3 - 51
        180 ,   // 4 - 52
        225 ,   // 5 - 53
        270 ,   // 6 - 54
        315 ,   // 7 - 55
        360 ,   // 8 - 56
        405 ,   // 9 - 57
        1980,   // : - 58
        -1  ,	// 59
        -1  ,	// 60
        -1  ,	// 61
        -1  ,	// 62
        -1  ,	// 63
        -1  ,	// 64
        450 ,   // A - 65
        495 ,   // B
        540 ,   // C
        585 ,   // D
        630 ,   // E
        675 ,   // F
        720 ,   // G
        765 ,   // H
        810 ,   // I
        855 ,   // J
        900 ,   // K
        945 ,   // L
        990 ,   // M
        1035,   // N
        1080,   // O
        1125,   // P
        1170,   // Q
        1215,   // R
        1260,   // S
        1305,   // T
        1350,   // U
        1395,   // V
        1440,   // W
        1485,   // X
        1530,   // Y
        1575,   // Z - 90
        -1  ,	// 91
        -1  ,	// 92
        -1  ,	// 93
        -1  ,	// 94
        -1  ,	// 95
        -1  ,	// 96
        -1  ,	// 97
        -1  ,	// 98
        -1  ,	// 99
        -1  ,	// 100
        -1  ,	// 101
        -1  ,	// 102
        -1  ,	// 103
        -1  ,	// 104
        -1  ,	// 105
        -1  ,	// 106
        -1  ,	// 107
        -1  ,	// 108
        -1  ,	// 109
        -1  ,	// 110
        -1  ,	// 111
        -1  ,	// 112
        -1  ,	// 113
        -1  ,	// 114
        -1  ,	// 115
        -1  ,	// 116
        -1  ,	// 117
        -1  ,	// 118
        -1  ,	// 119
        -1  ,	// 120
        -1  ,	// 121
        -1  ,	// 122
        -1  ,	// 123
        -1  ,	// 124
        -1  ,	// 125
        -1  ,	// 126
        -1  ,	// 127
        -1  ,	// 128
        -1  ,	// 129
        -1  ,	// 130
        -1  ,	// 131
        -1  ,	// 132
        -1  ,	// 133
        -1  ,	// 134
        -1  ,	// 135
        -1  ,	// 136
        -1  ,	// 137
        -1  ,	// 138
        -1  ,	// 139
        -1  ,	// 140
        -1  ,	// 141
        -1  ,	// 142
        -1  ,	// 143
        -1  ,	// 144
        -1  ,	// 145
        -1  ,	// 146
        -1  ,	// 147
        -1  ,	// 148
        -1  ,	// 149
        -1  ,	// 150
        -1  ,	// 151
        -1  ,	// 152
        -1  ,	// 153
        -1  ,	// 154
        -1  ,	// 155
        -1  ,	// 156
        -1  ,	// 157
        -1  ,	// 158
        -1  ,	// 159
        -1  ,	// 160
        -1  ,	// 161
        -1  ,	// 162
        -1  ,	// 163
        -1  ,	// 164
        -1  ,	// 165
        -1  ,	// 166
        -1  ,	// 167
        -1  ,	// 168
        -1  ,	// 169
        -1  ,	// 170
        -1  ,	// 171
        -1  ,	// 172
        -1  ,	// 173
        -1  ,	// 174
        -1  ,	// 175
        -1  ,	// 176
        -1  ,	// 177
        -1  ,	// 178
        -1  ,	// 179
        -1  ,	// 180
        -1  ,	// 181
        -1  ,	// 182
        -1  ,	// 183
        -1  ,	// 184
        -1  ,	// 185
        -1  ,	// 186
        -1  ,	// 187
        -1  ,	// 188
        -1  ,	// 189
        -1  ,	// 190
        -1  ,	// 191
        -1  ,	// 192
        -1  ,	// 193
        -1  ,	// 194
        -1  ,	// 195
        -1  ,	// 196
        -1  ,	// 197
        -1  ,	// 198
        -1  ,	// 199
        -1  ,	// 200
        -1  ,	// 201
        -1  ,	// 202
        -1  ,	// 203
        -1  ,	// 204
        -1  ,	// 205
        -1  ,	// 206
        -1  ,	// 207
        -1  ,	// 208
        -1  ,	// 209
        -1  ,	// 210
        -1  ,	// 211
        -1  ,	// 212
        -1  ,	// 213
        -1  ,	// 214
        -1  ,	// 215
        -1  ,	// 216
        -1  ,	// 217
        -1  ,	// 218
        -1  ,	// 219
        -1  ,	// 220
        -1  ,	// 221
        -1  ,	// 222
        -1  ,	// 223
        -1  ,	// 224
        -1  ,	// 225
        -1  ,	// 226
        -1  ,	// 227
        -1  ,	// 228
        -1  ,	// 229
        -1  ,	// 230
        -1  ,	// 231
        -1  ,	// 232
        -1  ,	// 233
        -1  ,	// 234
        -1  ,	// 235
        -1  ,	// 236
        -1  ,	// 237
        -1  ,	// 238
        -1  ,	// 239
        -1  ,	// 240
        -1  ,	// 241
        -1  ,	// 242
        -1  ,	// 243
        -1  ,	// 244
        -1  ,	// 245
        -1  ,	// 246
        -1  ,	// 247
        -1  ,	// 248
        -1  ,	// 249
        -1  ,	// 250
        -1  ,	// 251
        -1  ,	// 252
        -1  ,	// 253
        -1  ,	// 254
        -1  ,	// 255
    ];

    public static void Encode(BitWriter writer, scoped in ReadOnlySpan<byte> data)
    {
        var position = 0;
        for (; position + 2 <= data.Length; position += 2)
        {
            var pair = data[position..(position + 2)];
            Debug.Assert(Character1Map[pair[0]] != -1);
            Debug.Assert(Character2Map[pair[1]] != -1);
            writer.WriteBits(Character1Map[pair[0]] + Character2Map[pair[1]], 11);
        }

        if (data.Length != position)
        {
            Debug.Assert(data.Length == position + 1, "Expected only 1 character remaining after encoding all other pairs.");
            var remainingCharacter = data[position];

            writer.WriteBits(in Character2Map[remainingCharacter], 6);
        }
    }
}
